@model QAPostItemContainer
@inject IUserRetrievalShim UserRetrievalShim

@{
	var user = UserRetrievalShim.GetUser();
	var profile = UserRetrievalShim.GetProfile();
	var hideVanity = false;
	if (profile != null)
	{ hideVanity = profile.HideVanity; }

	string deleteLink;
	if (Model.Post.IsDeleted)
	{ deleteLink = PopForums.Resources.Undelete; }
	else if (Model.Post.IsFirstInTopic)
	{ deleteLink = PopForums.Resources.DeleteTopic; }
	else
	{ deleteLink = PopForums.Resources.Delete; }
}
<a name="@Model.Post.PostID"></a>
<div class="@(Model.Post.IsDeleted ? "bg-warning " : "") row postItem flex-nowrap" data-postid="@Model.Post.PostID" data-topicid="@Model.Topic.TopicID">
	<div class="answerData col-1">
		<p class="badge badge-primary">@await Html.PartialAsync("~/Areas/Forums/Views/Forum/Votes.cshtml", Model.Post.Votes)</p>
		@if (user != null && user.UserID != Model.Post.UserID)
		{
			if (Model.VotedPostIDs.Contains(Model.Post.PostID))
			{
				<p class="answerVote">@PopForums.Resources.Voted</p>
			}
			else
			{
				<p class="voteUp answerVote btn-link">Vote up</p>
			}
		}
		@if (user != null && user.UserID == Model.Topic.StartedByUserID && !Model.Post.IsFirstInTopic)
		{
			<p class="answerButton answerStatus @if(Model.Topic.AnswerPostID.HasValue && Model.Topic.AnswerPostID.Value == Model.Post.PostID){<text>icon-checkmark text-success</text>}else{<text>icon-checkmark2 text-muted</text>}" title="@PopForums.Resources.ChooseAnswer"> </p>
		}
		else
		{
			if (Model.Topic.AnswerPostID.HasValue && Model.Topic.AnswerPostID.Value == Model.Post.PostID)
			{
				<p class="icon-checkmark text-success answerStatus"></p>
			}
		}
	</div>
	<div class="col-11">
		<div class="postUserData bg-primary rounded mb-2 px-3 py-1" data-userid="@Model.Post.UserID">
			<h3 class="postNameLink text-light">@Model.Post.Name</h3>
			<div class="miniProfileBox bg-light text-dark rounded px-3 py-1 mb-2"></div>
			<small class="postTime text-right text-light">
				@if (user != null && user.IsInRole(PermanentRoles.Moderator))
				{
					@:IP: @Model.Post.IP -
				}
				<span class="fTime">@Model.Post.PostTime.AsUtc8601()</span>
			</small>
		</div>
		@if (!hideVanity && Model.Avatars.ContainsKey(Model.Post.UserID))
		{
			<img src="@Url.Action("Avatar", "Image", new { id = (Model.Avatars)[Model.Post.UserID] })" alt="@String.Format(PopForums.Resources.NameAvatar, Model.Post.Name)" class="avatar float-right ml-3 mb-3 d-none d-sm-block" />
		}

		<div class="@if (Model.PostWithChildren.LastReadTime.HasValue && Model.PostWithChildren.Post.PostTime > Model.PostWithChildren.LastReadTime)
	{<text>newPostBlock</text>}">@Html.Raw(Model.Post.FullText)</div>
		@if (Model.Post.IsEdited && Model.Post.LastEditTime.HasValue)
		{
			<small>@String.Format(PopForums.Resources.NameLastEdit, Model.Post.LastEditName), <span class="fTime">@Model.Post.LastEditTime.Value.AsUtc8601()</span></small>
		}

		@if (Model.Post.ShowSig && !hideVanity && (Model.Signatures).ContainsKey(Model.Post.UserID))
		{
			<hr />
			<div class="text-secondary">@Html.Raw((Model.Signatures)[Model.Post.UserID])</div>
		}
		<div class="postToolContainer">
			<ul class="postTools list-inline">
				<li class="list-inline-item">@Html.ActionLink(PopForums.Resources.Link, "PostLink", "Forum", new { id = Model.Post.PostID }, null)</li>
				@if (user != null && Model.Topic != null && Model.Topic.IsClosed == false)
				{
					<li class="list-inline-item"><input type="button" class="commentLink btn-link" value="@PopForums.Resources.Reply" /></li>
				}
				@if (user.IsPostEditable(Model.Post))
				{
					<li class="list-inline-item">@Html.ActionLink(PopForums.Resources.Edit, "Edit", "Forum", new { id = Model.Post.PostID }, null)</li>
					if (Model.Post.IsDeleted)
					{
						<li class="list-inline-item">
							<form asp-controller="Moderator" asp-action="UndeletePost" asp-route-id="@Model.Post.PostID" method="post" class="deletePostForm d-inline-block"><input type="submit" value="@PopForums.Resources.Undelete" class="btn-link" /></form>
						</li>
					}
					else
					{
						<li class="list-inline-item">
							<form asp-controller="Forum" asp-action="DeletePost" asp-route-id="@Model.Post.PostID" method="post" class="deletePostForm d-inline-block"><input type="submit" value="@deleteLink" class="btn-link" /></form>
						</li>
					}
				}
				@if (Model.Post.IsEdited && user != null && user.IsInRole(PermanentRoles.Moderator))
				{
					<li class="list-inline-item"><input data-postid="@Model.Post.PostID" class="btn-link postModLogButton" type="button" value="@PopForums.Resources.ModerationLog" /></li>
				}
			</ul>
			<div class="moderationLog rounded my-3 px-3 py-1"></div>
		</div>
		<div class="commentHolder"></div>
		@if (Model.PostWithChildren.Children != null && Model.PostWithChildren.Children.Count > 0)
		{
			foreach (var comment in Model.PostWithChildren.Children)
			{
				<a name="@comment.PostID"></a>
				<div class="@if(comment.IsDeleted){<text>bg-warning</text>}else{<text>well</text>} qaComment ml-3 p-2 @if (Model.PostWithChildren.LastReadTime.HasValue && comment.PostTime > Model.PostWithChildren.LastReadTime)
	{<text>newPostBlock</text>}">
					<hr />
					<p class="text-muted">
						@Html.ActionLink(comment.Name, "ViewProfile", AccountController.Name, new { id = comment.UserID }, null) - <span class="fTime">@comment.PostTime.AsUtc8601()</span>
						@if (user != null && user.IsInRole(PermanentRoles.Moderator))
						{<text> - IP: </text>@comment.IP}
					</p>
					@Html.Raw(comment.FullText)
					@if (user.IsPostEditable(comment))
					{
						if (comment.IsDeleted)
						{
							using (Html.BeginForm("UndeletePost", "Moderator", new { id = comment.PostID }, FormMethod.Post))
							{<input type="submit" value="@PopForums.Resources.Undelete" class="btn-link" /> }
						}
						else
						{
							using (Html.BeginForm("DeletePost", "Forum", new { id = comment.PostID }, FormMethod.Post))
							{ <input type="submit" value="@PopForums.Resources.Delete" class="btn-link" />							}
						}
					}
				</div>
			}
			if (user != null && Model.PostWithChildren.Children.Count > 0 && !Model.Topic.IsClosed)
			{
				<p><input type="button" class="btn btn-primary btn-sm" value="@PopForums.Resources.Reply" /></p>
			}
		}
	</div>
</div>